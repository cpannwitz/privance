// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Models
model Transaction {
  id              Int       @id @default(autoincrement())
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now()) @updatedAt
  identifier      Float?    @unique
  issuedate       DateTime?
  issuer          String?
  type            String?
  purpose         String?
  balance         Float?
  balanceCurrency String?
  amount          Float?
  amountCurrency  String?
  tags            Tag[]     @relation("TransactionTags", references: [id])
  category        Category? @relation("TransactionCategory", references: [id], fields: [categoryId])
  categoryId      Int?
}

model Category {
  id              Int              @id @default(autoincrement())
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @default(now()) @updatedAt
  name            String
  icon            String?
  color           String?
  transactions    Transaction[]    @relation("TransactionCategory")
  automationRules AutomationRule[] @relation("AutomationRuleCategory")
}

model Tag {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt
  name         String
  icon         String?
  color        String?
  transactions Transaction[] @relation("TransactionTags")
}

model AutomationRule {
  id             Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @default(now()) @updatedAt
  field          String
  operation      String
  stringValue    String?
  numberValue    Float?
  dateValue      DateTime?
  activeOnUpload Boolean   @default(true)
  category       Category  @relation("AutomationRuleCategory", references: [id], fields: [categoryId])
  categoryId     Int
}
